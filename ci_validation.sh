#!/bin/bash
# Script de valida√ß√£o do pipeline CI/CD

set -e  # Sair se algum comando falhar

echo "üöÄ Iniciando valida√ß√£o do pipeline CI/CD..."

# Verificar ambiente
echo "üîç Verificando ambiente..."

# Verificar se est√° no diret√≥rio correto
if [ ! -f "package.json" ] || [ ! -d "backend" ]; then
    echo "‚ùå Erro: Estrutura de projeto n√£o encontrada."
    exit 1
fi

echo "‚úÖ Estrutura de projeto verificada"

# Testar backend
echo "üß™ Testando backend..."
cd backend

# Verificar se o ambiente virtual est√° ativo
if [ -z "$VIRTUAL_ENV" ]; then
    echo "‚ö†Ô∏è  Aviso: Ambiente virtual do Python n√£o est√° ativo, criando temporariamente..."
    python -m venv venv_temp_ci
    source venv_temp_ci/bin/activate
    pip install -r requirements.txt
    deactivate
    source venv_temp_ci/bin/activate
else
    pip install -r requirements.txt
fi

# Rodar testes do backend
echo "üîç Rodando testes do backend..."
python -m pytest --tb=short

# Validar configura√ß√µes do Django
echo "üîç Validando configura√ß√µes do Django..."
python manage.py check

cd ..

# Testar frontend
echo "üß™ Testando frontend..."
npm install
npm run build
npm test -- --passWithNoTests  # Passar mesmo sem testes

# Verificar se build foi criado
if [ -d "dist" ]; then
    echo "‚úÖ Build do frontend criado com sucesso"
else
    echo "‚ùå Erro: Build do frontend n√£o foi criado"
    exit 1
fi

# Testar configura√ß√£o do Docker
echo "üê≥ Testando configura√ß√£o do Docker..."
if command -v docker &> /dev/null; then
    docker build -f backend/Dockerfile . --target backend
    docker build -f Dockerfile . --target frontend
    echo "‚úÖ Configura√ß√£o do Docker verificada"
else
    echo "‚ö†Ô∏è  Docker n√£o encontrado, pulando valida√ß√£o do Docker"
fi

# Testar configura√ß√£o do docker-compose
echo "üê≥ Testando configura√ß√£o do docker-compose..."
if command -v docker-compose &> /dev/null; then
    docker-compose config
    echo "‚úÖ Configura√ß√£o do docker-compose verificada"
else
    echo "‚ö†Ô∏è  Docker Compose n√£o encontrado, pulando valida√ß√£o"
fi

echo "‚úÖ Valida√ß√£o do pipeline completada com sucesso!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "   1. Fazer push para o reposit√≥rio para acionar o pipeline CI/CD"
echo "   2. Verificar o status do pipeline no GitHub Actions"
echo "   3. Se for para produ√ß√£o, verificar o deployment"