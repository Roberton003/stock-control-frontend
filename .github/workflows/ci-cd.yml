name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd stock-control-lab/stock-control-lab/backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend tests
      run: |
        cd stock-control-lab/stock-control-lab/backend
        python manage.py test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379/0

    - name: Run security checks
      run: |
        cd stock-control-lab/stock-control-lab/backend
        pip install bandit
        bandit -r .

  test-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: stock-control-lab/stock-control-lab/package-lock.json

    - name: Install dependencies
      run: |
        cd stock-control-lab/stock-control-lab
        npm install

    - name: Run frontend tests
      run: |
        cd stock-control-lab/stock-control-lab
        npm test

    - name: Run linting
      run: |
        cd stock-control-lab/stock-control-lab
        npm run lint

    - name: Build frontend
      run: |
        cd stock-control-lab/stock-control-lab
        npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and export to Docker
      uses: docker/build-push-action@v5
      with:
        context: ./stock-control-lab/stock-control-lab
        file: ./stock-control-lab/stock-control-lab/backend/Dockerfile
        load: true
        tags: stock-control-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./stock-control-lab/stock-control-lab
        file: ./stock-control-lab/stock-control-lab/Dockerfile
        load: true
        tags: stock-control-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security-scan:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]

    steps:
    - uses: actions/checkout@v4

    - name: Security scan - Backend
      run: |
        cd stock-control-lab/stock-control-lab/backend
        pip install safety
        safety check -r requirements.txt

    - name: Security scan - Frontend
      run: |
        cd stock-control-lab/stock-control-lab
        npm audit --audit-level moderate

  docker-push:
    runs-on: ubuntu-latest
    needs: [docker-build, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./stock-control-lab/stock-control-lab
        file: ./stock-control-lab/stock-control-lab/backend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/stock-control-backend:${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/stock-control-backend:latest

    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./stock-control-lab/stock-control-lab
        file: ./stock-control-lab/stock-control-lab/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/stock-control-frontend:${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/stock-control-frontend:latest